@startuml
'https://plantuml.com/sequence-diagram

actor 门店生产
门店生产 -> RocketMQ: 订阅门店半成品使用量变更消息
门店生产 -> RocketMQ: 消费门店半成品使用量变更消息
门店生产 -> 策略配置中心: 查询门店高峰期配置
opt 高峰期配置为空或当前时间不在高峰期范围内
门店生产 -> RocketMQ: 消息提交
end
门店生产 -> 策略配置中心: 查询半成品阈值配置
opt 半成品配置阈值为空
门店生产 -> RocketMQ: 消息提交
end
门店生产 -> 门店生产: 组装阈值配置Map<半成品编码, 阈值>
门店生产 -> 效期系统: 按店铺+半成品编码列表纬度 查询全店最近一次生产数据
opt 最近一次生产量为空或最近一次生产时间<今天凌晨5点
门店生产 -> RocketMQ: 消息提交
end
门店生产 -> 门店生产: 组装全店最近一次生产数据Map<半成品编码, 生产值>
门店生产 -> Redis: 查询门店正在制备中的半成品列表
loop 按消息体中半成品列表循环
opt 半成品正在制备中
门店生产 -> 门店生产: continue;
end
opt 获取半成品阈值为空
门店生产 -> 门店生产: continue;
end
opt 获取半成品最近一次生产数据为空
门店生产 -> 门店生产: continue;
end
门店生产 -> 门店生产: 根据半成品查询从生产时间到当前时间的半成品使用量
门店生产 -> 门店生产: 计算剩余量 = 最近一次生产量 - 从生产时间到当前时间的半成品使用量
opt 剩余量 >= 阈值
门店生产 -> 门店生产: continue;
end
门店生产 -> C端商品中心: 根据半成品编码查询半成本详细信息（半成品制备规格、单位）
C端商品中心 --> 门店生产: 返回半成本详细信息
门店生产 -> 数仓: 查询店铺+半成品 从现在到高峰期结束的预测用量
门店生产 -> 策略配置中心: 获取变动阈值
门店生产 -> 门店生产: 计算实际预测用量
门店生产 -> 门店生产: 计算推荐制备量 推荐制备量（按份数向上取整）=预测用量-理论剩余量
门店生产 -> 门店生产: 组装推送消息
门店生产 -> 门店生产: 组装推送消息对应的生产计划明细（时间轴明细）
门店生产 -> 门店生产DB: 生产计划消息、生产计划明细数据持久化(事物)
门店生产 -> 设备中心: 推送店铺高峰期断货提醒 以待前端取用
门店生产 -> 设备中心: 追加推送生产计划明细（时间轴明细）
门店生产 -> Redis: 将该门店该半成品标记为制备中（该状态在效期贴打印后扭转为制备完成）
end
@enduml